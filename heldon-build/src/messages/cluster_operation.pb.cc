// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cluster_operation.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cluster_operation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ShutdownMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShutdownMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReplyShutdownMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReplyShutdownMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_cluster_5foperation_2eproto() {
  protobuf_AddDesc_cluster_5foperation_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "cluster_operation.proto");
  GOOGLE_CHECK(file != NULL);
  ShutdownMessage_descriptor_ = file->message_type(0);
  static const int ShutdownMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShutdownMessage, master_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShutdownMessage, slave_ip_),
  };
  ShutdownMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShutdownMessage_descriptor_,
      ShutdownMessage::default_instance_,
      ShutdownMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShutdownMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShutdownMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShutdownMessage));
  ReplyShutdownMessage_descriptor_ = file->message_type(1);
  static const int ReplyShutdownMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyShutdownMessage, master_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyShutdownMessage, slave_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyShutdownMessage, is_shutdown_),
  };
  ReplyShutdownMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReplyShutdownMessage_descriptor_,
      ReplyShutdownMessage::default_instance_,
      ReplyShutdownMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyShutdownMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyShutdownMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReplyShutdownMessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_cluster_5foperation_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShutdownMessage_descriptor_, &ShutdownMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReplyShutdownMessage_descriptor_, &ReplyShutdownMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_cluster_5foperation_2eproto() {
  delete ShutdownMessage::default_instance_;
  delete ShutdownMessage_reflection_;
  delete ReplyShutdownMessage::default_instance_;
  delete ReplyShutdownMessage_reflection_;
}

void protobuf_AddDesc_cluster_5foperation_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027cluster_operation.proto\"6\n\017ShutdownMes"
    "sage\022\021\n\tmaster_ip\030\001 \002(\t\022\020\n\010slave_ip\030\002 \002("
    "\t\"P\n\024ReplyShutdownMessage\022\021\n\tmaster_ip\030\001"
    " \002(\t\022\020\n\010slave_ip\030\002 \002(\t\022\023\n\013is_shutdown\030\003 "
    "\002(\010", 163);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cluster_operation.proto", &protobuf_RegisterTypes);
  ShutdownMessage::default_instance_ = new ShutdownMessage();
  ReplyShutdownMessage::default_instance_ = new ReplyShutdownMessage();
  ShutdownMessage::default_instance_->InitAsDefaultInstance();
  ReplyShutdownMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_cluster_5foperation_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_cluster_5foperation_2eproto {
  StaticDescriptorInitializer_cluster_5foperation_2eproto() {
    protobuf_AddDesc_cluster_5foperation_2eproto();
  }
} static_descriptor_initializer_cluster_5foperation_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ShutdownMessage::kMasterIpFieldNumber;
const int ShutdownMessage::kSlaveIpFieldNumber;
#endif  // !_MSC_VER

ShutdownMessage::ShutdownMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShutdownMessage)
}

void ShutdownMessage::InitAsDefaultInstance() {
}

ShutdownMessage::ShutdownMessage(const ShutdownMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ShutdownMessage)
}

void ShutdownMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  master_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slave_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShutdownMessage::~ShutdownMessage() {
  // @@protoc_insertion_point(destructor:ShutdownMessage)
  SharedDtor();
}

void ShutdownMessage::SharedDtor() {
  if (master_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete master_ip_;
  }
  if (slave_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete slave_ip_;
  }
  if (this != default_instance_) {
  }
}

void ShutdownMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShutdownMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShutdownMessage_descriptor_;
}

const ShutdownMessage& ShutdownMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cluster_5foperation_2eproto();
  return *default_instance_;
}

ShutdownMessage* ShutdownMessage::default_instance_ = NULL;

ShutdownMessage* ShutdownMessage::New() const {
  return new ShutdownMessage;
}

void ShutdownMessage::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_master_ip()) {
      if (master_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        master_ip_->clear();
      }
    }
    if (has_slave_ip()) {
      if (slave_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        slave_ip_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShutdownMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShutdownMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string master_ip = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_master_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->master_ip().data(), this->master_ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "master_ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_slave_ip;
        break;
      }

      // required string slave_ip = 2;
      case 2: {
        if (tag == 18) {
         parse_slave_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slave_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->slave_ip().data(), this->slave_ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "slave_ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShutdownMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShutdownMessage)
  return false;
#undef DO_
}

void ShutdownMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShutdownMessage)
  // required string master_ip = 1;
  if (has_master_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->master_ip().data(), this->master_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "master_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->master_ip(), output);
  }

  // required string slave_ip = 2;
  if (has_slave_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slave_ip().data(), this->slave_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "slave_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->slave_ip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShutdownMessage)
}

::google::protobuf::uint8* ShutdownMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ShutdownMessage)
  // required string master_ip = 1;
  if (has_master_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->master_ip().data(), this->master_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "master_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->master_ip(), target);
  }

  // required string slave_ip = 2;
  if (has_slave_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slave_ip().data(), this->slave_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "slave_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->slave_ip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShutdownMessage)
  return target;
}

int ShutdownMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string master_ip = 1;
    if (has_master_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->master_ip());
    }

    // required string slave_ip = 2;
    if (has_slave_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->slave_ip());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShutdownMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShutdownMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShutdownMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShutdownMessage::MergeFrom(const ShutdownMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_master_ip()) {
      set_master_ip(from.master_ip());
    }
    if (from.has_slave_ip()) {
      set_slave_ip(from.slave_ip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShutdownMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShutdownMessage::CopyFrom(const ShutdownMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShutdownMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ShutdownMessage::Swap(ShutdownMessage* other) {
  if (other != this) {
    std::swap(master_ip_, other->master_ip_);
    std::swap(slave_ip_, other->slave_ip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShutdownMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShutdownMessage_descriptor_;
  metadata.reflection = ShutdownMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReplyShutdownMessage::kMasterIpFieldNumber;
const int ReplyShutdownMessage::kSlaveIpFieldNumber;
const int ReplyShutdownMessage::kIsShutdownFieldNumber;
#endif  // !_MSC_VER

ReplyShutdownMessage::ReplyShutdownMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReplyShutdownMessage)
}

void ReplyShutdownMessage::InitAsDefaultInstance() {
}

ReplyShutdownMessage::ReplyShutdownMessage(const ReplyShutdownMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReplyShutdownMessage)
}

void ReplyShutdownMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  master_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slave_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_shutdown_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReplyShutdownMessage::~ReplyShutdownMessage() {
  // @@protoc_insertion_point(destructor:ReplyShutdownMessage)
  SharedDtor();
}

void ReplyShutdownMessage::SharedDtor() {
  if (master_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete master_ip_;
  }
  if (slave_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete slave_ip_;
  }
  if (this != default_instance_) {
  }
}

void ReplyShutdownMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReplyShutdownMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReplyShutdownMessage_descriptor_;
}

const ReplyShutdownMessage& ReplyShutdownMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cluster_5foperation_2eproto();
  return *default_instance_;
}

ReplyShutdownMessage* ReplyShutdownMessage::default_instance_ = NULL;

ReplyShutdownMessage* ReplyShutdownMessage::New() const {
  return new ReplyShutdownMessage;
}

void ReplyShutdownMessage::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_master_ip()) {
      if (master_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        master_ip_->clear();
      }
    }
    if (has_slave_ip()) {
      if (slave_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        slave_ip_->clear();
      }
    }
    is_shutdown_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReplyShutdownMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReplyShutdownMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string master_ip = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_master_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->master_ip().data(), this->master_ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "master_ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_slave_ip;
        break;
      }

      // required string slave_ip = 2;
      case 2: {
        if (tag == 18) {
         parse_slave_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slave_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->slave_ip().data(), this->slave_ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "slave_ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_is_shutdown;
        break;
      }

      // required bool is_shutdown = 3;
      case 3: {
        if (tag == 24) {
         parse_is_shutdown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_shutdown_)));
          set_has_is_shutdown();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReplyShutdownMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReplyShutdownMessage)
  return false;
#undef DO_
}

void ReplyShutdownMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReplyShutdownMessage)
  // required string master_ip = 1;
  if (has_master_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->master_ip().data(), this->master_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "master_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->master_ip(), output);
  }

  // required string slave_ip = 2;
  if (has_slave_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slave_ip().data(), this->slave_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "slave_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->slave_ip(), output);
  }

  // required bool is_shutdown = 3;
  if (has_is_shutdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_shutdown(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReplyShutdownMessage)
}

::google::protobuf::uint8* ReplyShutdownMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReplyShutdownMessage)
  // required string master_ip = 1;
  if (has_master_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->master_ip().data(), this->master_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "master_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->master_ip(), target);
  }

  // required string slave_ip = 2;
  if (has_slave_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slave_ip().data(), this->slave_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "slave_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->slave_ip(), target);
  }

  // required bool is_shutdown = 3;
  if (has_is_shutdown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_shutdown(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReplyShutdownMessage)
  return target;
}

int ReplyShutdownMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string master_ip = 1;
    if (has_master_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->master_ip());
    }

    // required string slave_ip = 2;
    if (has_slave_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->slave_ip());
    }

    // required bool is_shutdown = 3;
    if (has_is_shutdown()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReplyShutdownMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReplyShutdownMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReplyShutdownMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReplyShutdownMessage::MergeFrom(const ReplyShutdownMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_master_ip()) {
      set_master_ip(from.master_ip());
    }
    if (from.has_slave_ip()) {
      set_slave_ip(from.slave_ip());
    }
    if (from.has_is_shutdown()) {
      set_is_shutdown(from.is_shutdown());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReplyShutdownMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplyShutdownMessage::CopyFrom(const ReplyShutdownMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyShutdownMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ReplyShutdownMessage::Swap(ReplyShutdownMessage* other) {
  if (other != this) {
    std::swap(master_ip_, other->master_ip_);
    std::swap(slave_ip_, other->slave_ip_);
    std::swap(is_shutdown_, other->is_shutdown_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReplyShutdownMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReplyShutdownMessage_descriptor_;
  metadata.reflection = ReplyShutdownMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
