// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "module.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mesos {

namespace {

const ::google::protobuf::Descriptor* Modules_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Modules_reflection_ = NULL;
const ::google::protobuf::Descriptor* Modules_Library_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Modules_Library_reflection_ = NULL;
const ::google::protobuf::Descriptor* Modules_Library_Module_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Modules_Library_Module_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_module_2eproto() {
  protobuf_AddDesc_module_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "module.proto");
  GOOGLE_CHECK(file != NULL);
  Modules_descriptor_ = file->message_type(0);
  static const int Modules_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Modules, libraries_),
  };
  Modules_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Modules_descriptor_,
      Modules::default_instance_,
      Modules_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Modules, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Modules, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Modules));
  Modules_Library_descriptor_ = Modules_descriptor_->nested_type(0);
  static const int Modules_Library_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Modules_Library, file_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Modules_Library, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Modules_Library, modules_),
  };
  Modules_Library_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Modules_Library_descriptor_,
      Modules_Library::default_instance_,
      Modules_Library_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Modules_Library, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Modules_Library, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Modules_Library));
  Modules_Library_Module_descriptor_ = Modules_Library_descriptor_->nested_type(0);
  static const int Modules_Library_Module_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Modules_Library_Module, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Modules_Library_Module, parameters_),
  };
  Modules_Library_Module_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Modules_Library_Module_descriptor_,
      Modules_Library_Module::default_instance_,
      Modules_Library_Module_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Modules_Library_Module, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Modules_Library_Module, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Modules_Library_Module));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_module_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Modules_descriptor_, &Modules::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Modules_Library_descriptor_, &Modules_Library::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Modules_Library_Module_descriptor_, &Modules_Library_Module::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_module_2eproto() {
  delete Modules::default_instance_;
  delete Modules_reflection_;
  delete Modules_Library::default_instance_;
  delete Modules_Library_reflection_;
  delete Modules_Library_Module::default_instance_;
  delete Modules_Library_Module_reflection_;
}

void protobuf_AddDesc_module_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::mesos::protobuf_AddDesc_mesos_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014module.proto\022\005mesos\032\013mesos.proto\"\312\001\n\007M"
    "odules\022)\n\tlibraries\030\001 \003(\0132\026.mesos.Module"
    "s.Library\032\223\001\n\007Library\022\014\n\004file\030\001 \001(\t\022\014\n\004n"
    "ame\030\002 \001(\t\022.\n\007modules\030\003 \003(\0132\035.mesos.Modul"
    "es.Library.Module\032<\n\006Module\022\014\n\004name\030\001 \001("
    "\t\022$\n\nparameters\030\002 \003(\0132\020.mesos.ParameterB"
    "\032\n\020org.apache.mesosB\006Protos", 267);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "module.proto", &protobuf_RegisterTypes);
  Modules::default_instance_ = new Modules();
  Modules_Library::default_instance_ = new Modules_Library();
  Modules_Library_Module::default_instance_ = new Modules_Library_Module();
  Modules::default_instance_->InitAsDefaultInstance();
  Modules_Library::default_instance_->InitAsDefaultInstance();
  Modules_Library_Module::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_module_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_module_2eproto {
  StaticDescriptorInitializer_module_2eproto() {
    protobuf_AddDesc_module_2eproto();
  }
} static_descriptor_initializer_module_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Modules_Library_Module::kNameFieldNumber;
const int Modules_Library_Module::kParametersFieldNumber;
#endif  // !_MSC_VER

Modules_Library_Module::Modules_Library_Module()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mesos.Modules.Library.Module)
}

void Modules_Library_Module::InitAsDefaultInstance() {
}

Modules_Library_Module::Modules_Library_Module(const Modules_Library_Module& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mesos.Modules.Library.Module)
}

void Modules_Library_Module::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Modules_Library_Module::~Modules_Library_Module() {
  // @@protoc_insertion_point(destructor:mesos.Modules.Library.Module)
  SharedDtor();
}

void Modules_Library_Module::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Modules_Library_Module::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Modules_Library_Module::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Modules_Library_Module_descriptor_;
}

const Modules_Library_Module& Modules_Library_Module::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2eproto();
  return *default_instance_;
}

Modules_Library_Module* Modules_Library_Module::default_instance_ = NULL;

Modules_Library_Module* Modules_Library_Module::New() const {
  return new Modules_Library_Module;
}

void Modules_Library_Module::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  parameters_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Modules_Library_Module::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mesos.Modules.Library.Module)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_parameters;
        break;
      }

      // repeated .mesos.Parameter parameters = 2;
      case 2: {
        if (tag == 18) {
         parse_parameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_parameters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_parameters;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mesos.Modules.Library.Module)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mesos.Modules.Library.Module)
  return false;
#undef DO_
}

void Modules_Library_Module::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mesos.Modules.Library.Module)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .mesos.Parameter parameters = 2;
  for (int i = 0; i < this->parameters_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->parameters(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mesos.Modules.Library.Module)
}

::google::protobuf::uint8* Modules_Library_Module::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mesos.Modules.Library.Module)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .mesos.Parameter parameters = 2;
  for (int i = 0; i < this->parameters_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->parameters(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mesos.Modules.Library.Module)
  return target;
}

int Modules_Library_Module::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated .mesos.Parameter parameters = 2;
  total_size += 1 * this->parameters_size();
  for (int i = 0; i < this->parameters_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->parameters(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Modules_Library_Module::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Modules_Library_Module* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Modules_Library_Module*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Modules_Library_Module::MergeFrom(const Modules_Library_Module& from) {
  GOOGLE_CHECK_NE(&from, this);
  parameters_.MergeFrom(from.parameters_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Modules_Library_Module::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Modules_Library_Module::CopyFrom(const Modules_Library_Module& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Modules_Library_Module::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->parameters())) return false;
  return true;
}

void Modules_Library_Module::Swap(Modules_Library_Module* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    parameters_.Swap(&other->parameters_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Modules_Library_Module::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Modules_Library_Module_descriptor_;
  metadata.reflection = Modules_Library_Module_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Modules_Library::kFileFieldNumber;
const int Modules_Library::kNameFieldNumber;
const int Modules_Library::kModulesFieldNumber;
#endif  // !_MSC_VER

Modules_Library::Modules_Library()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mesos.Modules.Library)
}

void Modules_Library::InitAsDefaultInstance() {
}

Modules_Library::Modules_Library(const Modules_Library& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mesos.Modules.Library)
}

void Modules_Library::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  file_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Modules_Library::~Modules_Library() {
  // @@protoc_insertion_point(destructor:mesos.Modules.Library)
  SharedDtor();
}

void Modules_Library::SharedDtor() {
  if (file_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete file_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Modules_Library::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Modules_Library::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Modules_Library_descriptor_;
}

const Modules_Library& Modules_Library::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2eproto();
  return *default_instance_;
}

Modules_Library* Modules_Library::default_instance_ = NULL;

Modules_Library* Modules_Library::New() const {
  return new Modules_Library;
}

void Modules_Library::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_file()) {
      if (file_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        file_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  modules_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Modules_Library::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mesos.Modules.Library)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string file = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file().data(), this->file().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "file");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_modules;
        break;
      }

      // repeated .mesos.Modules.Library.Module modules = 3;
      case 3: {
        if (tag == 26) {
         parse_modules:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_modules()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_modules;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mesos.Modules.Library)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mesos.Modules.Library)
  return false;
#undef DO_
}

void Modules_Library::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mesos.Modules.Library)
  // optional string file = 1;
  if (has_file()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file().data(), this->file().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .mesos.Modules.Library.Module modules = 3;
  for (int i = 0; i < this->modules_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->modules(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mesos.Modules.Library)
}

::google::protobuf::uint8* Modules_Library::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mesos.Modules.Library)
  // optional string file = 1;
  if (has_file()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file().data(), this->file().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .mesos.Modules.Library.Module modules = 3;
  for (int i = 0; i < this->modules_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->modules(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mesos.Modules.Library)
  return target;
}

int Modules_Library::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string file = 1;
    if (has_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated .mesos.Modules.Library.Module modules = 3;
  total_size += 1 * this->modules_size();
  for (int i = 0; i < this->modules_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->modules(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Modules_Library::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Modules_Library* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Modules_Library*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Modules_Library::MergeFrom(const Modules_Library& from) {
  GOOGLE_CHECK_NE(&from, this);
  modules_.MergeFrom(from.modules_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_file()) {
      set_file(from.file());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Modules_Library::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Modules_Library::CopyFrom(const Modules_Library& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Modules_Library::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->modules())) return false;
  return true;
}

void Modules_Library::Swap(Modules_Library* other) {
  if (other != this) {
    std::swap(file_, other->file_);
    std::swap(name_, other->name_);
    modules_.Swap(&other->modules_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Modules_Library::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Modules_Library_descriptor_;
  metadata.reflection = Modules_Library_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Modules::kLibrariesFieldNumber;
#endif  // !_MSC_VER

Modules::Modules()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mesos.Modules)
}

void Modules::InitAsDefaultInstance() {
}

Modules::Modules(const Modules& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mesos.Modules)
}

void Modules::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Modules::~Modules() {
  // @@protoc_insertion_point(destructor:mesos.Modules)
  SharedDtor();
}

void Modules::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Modules::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Modules::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Modules_descriptor_;
}

const Modules& Modules::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2eproto();
  return *default_instance_;
}

Modules* Modules::default_instance_ = NULL;

Modules* Modules::New() const {
  return new Modules;
}

void Modules::Clear() {
  libraries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Modules::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mesos.Modules)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mesos.Modules.Library libraries = 1;
      case 1: {
        if (tag == 10) {
         parse_libraries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_libraries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_libraries;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mesos.Modules)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mesos.Modules)
  return false;
#undef DO_
}

void Modules::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mesos.Modules)
  // repeated .mesos.Modules.Library libraries = 1;
  for (int i = 0; i < this->libraries_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->libraries(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mesos.Modules)
}

::google::protobuf::uint8* Modules::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mesos.Modules)
  // repeated .mesos.Modules.Library libraries = 1;
  for (int i = 0; i < this->libraries_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->libraries(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mesos.Modules)
  return target;
}

int Modules::ByteSize() const {
  int total_size = 0;

  // repeated .mesos.Modules.Library libraries = 1;
  total_size += 1 * this->libraries_size();
  for (int i = 0; i < this->libraries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->libraries(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Modules::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Modules* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Modules*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Modules::MergeFrom(const Modules& from) {
  GOOGLE_CHECK_NE(&from, this);
  libraries_.MergeFrom(from.libraries_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Modules::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Modules::CopyFrom(const Modules& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Modules::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->libraries())) return false;
  return true;
}

void Modules::Swap(Modules* other) {
  if (other != this) {
    libraries_.Swap(&other->libraries_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Modules::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Modules_descriptor_;
  metadata.reflection = Modules_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mesos

// @@protoc_insertion_point(global_scope)
