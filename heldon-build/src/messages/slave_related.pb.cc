// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: slave_related.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "slave_related.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ReregisterMasterMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReregisterMasterMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* BackupMasterMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BackupMasterMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_slave_5frelated_2eproto() {
  protobuf_AddDesc_slave_5frelated_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "slave_related.proto");
  GOOGLE_CHECK(file != NULL);
  ReregisterMasterMessage_descriptor_ = file->message_type(0);
  static const int ReregisterMasterMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReregisterMasterMessage, master_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReregisterMasterMessage, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReregisterMasterMessage, slave_ip_),
  };
  ReregisterMasterMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReregisterMasterMessage_descriptor_,
      ReregisterMasterMessage::default_instance_,
      ReregisterMasterMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReregisterMasterMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReregisterMasterMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReregisterMasterMessage));
  BackupMasterMessage_descriptor_ = file->message_type(1);
  static const int BackupMasterMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupMasterMessage, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupMasterMessage, port_),
  };
  BackupMasterMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BackupMasterMessage_descriptor_,
      BackupMasterMessage::default_instance_,
      BackupMasterMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupMasterMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackupMasterMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BackupMasterMessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_slave_5frelated_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReregisterMasterMessage_descriptor_, &ReregisterMasterMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BackupMasterMessage_descriptor_, &BackupMasterMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_slave_5frelated_2eproto() {
  delete ReregisterMasterMessage::default_instance_;
  delete ReregisterMasterMessage_reflection_;
  delete BackupMasterMessage::default_instance_;
  delete BackupMasterMessage_reflection_;
}

void protobuf_AddDesc_slave_5frelated_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023slave_related.proto\"L\n\027ReregisterMaste"
    "rMessage\022\021\n\tmaster_ip\030\001 \002(\t\022\014\n\004port\030\002 \002("
    "\t\022\020\n\010slave_ip\030\003 \002(\t\"/\n\023BackupMasterMessa"
    "ge\022\n\n\002ip\030\001 \002(\t\022\014\n\004port\030\002 \002(\t", 148);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "slave_related.proto", &protobuf_RegisterTypes);
  ReregisterMasterMessage::default_instance_ = new ReregisterMasterMessage();
  BackupMasterMessage::default_instance_ = new BackupMasterMessage();
  ReregisterMasterMessage::default_instance_->InitAsDefaultInstance();
  BackupMasterMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_slave_5frelated_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_slave_5frelated_2eproto {
  StaticDescriptorInitializer_slave_5frelated_2eproto() {
    protobuf_AddDesc_slave_5frelated_2eproto();
  }
} static_descriptor_initializer_slave_5frelated_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ReregisterMasterMessage::kMasterIpFieldNumber;
const int ReregisterMasterMessage::kPortFieldNumber;
const int ReregisterMasterMessage::kSlaveIpFieldNumber;
#endif  // !_MSC_VER

ReregisterMasterMessage::ReregisterMasterMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReregisterMasterMessage)
}

void ReregisterMasterMessage::InitAsDefaultInstance() {
}

ReregisterMasterMessage::ReregisterMasterMessage(const ReregisterMasterMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReregisterMasterMessage)
}

void ReregisterMasterMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  master_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slave_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReregisterMasterMessage::~ReregisterMasterMessage() {
  // @@protoc_insertion_point(destructor:ReregisterMasterMessage)
  SharedDtor();
}

void ReregisterMasterMessage::SharedDtor() {
  if (master_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete master_ip_;
  }
  if (port_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete port_;
  }
  if (slave_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete slave_ip_;
  }
  if (this != default_instance_) {
  }
}

void ReregisterMasterMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReregisterMasterMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReregisterMasterMessage_descriptor_;
}

const ReregisterMasterMessage& ReregisterMasterMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_slave_5frelated_2eproto();
  return *default_instance_;
}

ReregisterMasterMessage* ReregisterMasterMessage::default_instance_ = NULL;

ReregisterMasterMessage* ReregisterMasterMessage::New() const {
  return new ReregisterMasterMessage;
}

void ReregisterMasterMessage::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_master_ip()) {
      if (master_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        master_ip_->clear();
      }
    }
    if (has_port()) {
      if (port_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        port_->clear();
      }
    }
    if (has_slave_ip()) {
      if (slave_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        slave_ip_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReregisterMasterMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReregisterMasterMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string master_ip = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_master_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->master_ip().data(), this->master_ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "master_ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_port;
        break;
      }

      // required string port = 2;
      case 2: {
        if (tag == 18) {
         parse_port:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_port()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->port().data(), this->port().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "port");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_slave_ip;
        break;
      }

      // required string slave_ip = 3;
      case 3: {
        if (tag == 26) {
         parse_slave_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slave_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->slave_ip().data(), this->slave_ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "slave_ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReregisterMasterMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReregisterMasterMessage)
  return false;
#undef DO_
}

void ReregisterMasterMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReregisterMasterMessage)
  // required string master_ip = 1;
  if (has_master_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->master_ip().data(), this->master_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "master_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->master_ip(), output);
  }

  // required string port = 2;
  if (has_port()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->port().data(), this->port().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "port");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->port(), output);
  }

  // required string slave_ip = 3;
  if (has_slave_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slave_ip().data(), this->slave_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "slave_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->slave_ip(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReregisterMasterMessage)
}

::google::protobuf::uint8* ReregisterMasterMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReregisterMasterMessage)
  // required string master_ip = 1;
  if (has_master_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->master_ip().data(), this->master_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "master_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->master_ip(), target);
  }

  // required string port = 2;
  if (has_port()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->port().data(), this->port().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "port");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->port(), target);
  }

  // required string slave_ip = 3;
  if (has_slave_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slave_ip().data(), this->slave_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "slave_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->slave_ip(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReregisterMasterMessage)
  return target;
}

int ReregisterMasterMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string master_ip = 1;
    if (has_master_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->master_ip());
    }

    // required string port = 2;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->port());
    }

    // required string slave_ip = 3;
    if (has_slave_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->slave_ip());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReregisterMasterMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReregisterMasterMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReregisterMasterMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReregisterMasterMessage::MergeFrom(const ReregisterMasterMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_master_ip()) {
      set_master_ip(from.master_ip());
    }
    if (from.has_port()) {
      set_port(from.port());
    }
    if (from.has_slave_ip()) {
      set_slave_ip(from.slave_ip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReregisterMasterMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReregisterMasterMessage::CopyFrom(const ReregisterMasterMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReregisterMasterMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ReregisterMasterMessage::Swap(ReregisterMasterMessage* other) {
  if (other != this) {
    std::swap(master_ip_, other->master_ip_);
    std::swap(port_, other->port_);
    std::swap(slave_ip_, other->slave_ip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReregisterMasterMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReregisterMasterMessage_descriptor_;
  metadata.reflection = ReregisterMasterMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BackupMasterMessage::kIpFieldNumber;
const int BackupMasterMessage::kPortFieldNumber;
#endif  // !_MSC_VER

BackupMasterMessage::BackupMasterMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BackupMasterMessage)
}

void BackupMasterMessage::InitAsDefaultInstance() {
}

BackupMasterMessage::BackupMasterMessage(const BackupMasterMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BackupMasterMessage)
}

void BackupMasterMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BackupMasterMessage::~BackupMasterMessage() {
  // @@protoc_insertion_point(destructor:BackupMasterMessage)
  SharedDtor();
}

void BackupMasterMessage::SharedDtor() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (port_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete port_;
  }
  if (this != default_instance_) {
  }
}

void BackupMasterMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BackupMasterMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BackupMasterMessage_descriptor_;
}

const BackupMasterMessage& BackupMasterMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_slave_5frelated_2eproto();
  return *default_instance_;
}

BackupMasterMessage* BackupMasterMessage::default_instance_ = NULL;

BackupMasterMessage* BackupMasterMessage::New() const {
  return new BackupMasterMessage;
}

void BackupMasterMessage::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_ip()) {
      if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        ip_->clear();
      }
    }
    if (has_port()) {
      if (port_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        port_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BackupMasterMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BackupMasterMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ip = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_port;
        break;
      }

      // required string port = 2;
      case 2: {
        if (tag == 18) {
         parse_port:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_port()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->port().data(), this->port().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "port");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BackupMasterMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BackupMasterMessage)
  return false;
#undef DO_
}

void BackupMasterMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BackupMasterMessage)
  // required string ip = 1;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // required string port = 2;
  if (has_port()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->port().data(), this->port().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "port");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->port(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BackupMasterMessage)
}

::google::protobuf::uint8* BackupMasterMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BackupMasterMessage)
  // required string ip = 1;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // required string port = 2;
  if (has_port()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->port().data(), this->port().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "port");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->port(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BackupMasterMessage)
  return target;
}

int BackupMasterMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string ip = 1;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // required string port = 2;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->port());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BackupMasterMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BackupMasterMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BackupMasterMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BackupMasterMessage::MergeFrom(const BackupMasterMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ip()) {
      set_ip(from.ip());
    }
    if (from.has_port()) {
      set_port(from.port());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BackupMasterMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackupMasterMessage::CopyFrom(const BackupMasterMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackupMasterMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void BackupMasterMessage::Swap(BackupMasterMessage* other) {
  if (other != this) {
    std::swap(ip_, other->ip_);
    std::swap(port_, other->port_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BackupMasterMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BackupMasterMessage_descriptor_;
  metadata.reflection = BackupMasterMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
